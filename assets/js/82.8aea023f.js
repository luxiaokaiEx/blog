(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{576:function(s,e,a){"use strict";a.r(e);var n=a(22),r=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-1"}},[s._v("#")]),s._v(" Docker（1）")]),s._v(" "),a("h2",{attrs:{id:"docker-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-简介"}},[s._v("#")]),s._v(" Docker 简介")]),s._v(" "),a("h3",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("开发和运维之间因为环境不同而导致的矛盾")]),s._v(" "),a("p",[s._v("集群环境下每台机器部署相同的应用")]),s._v(" "),a("p",[s._v("DevOps(Development and Operations)")]),s._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化，容器是完全使用沙箱机制，相互之间不会有任何接口。")]),s._v(" "),a("p",[s._v("Docker是世界领先的软件容器平台。开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题。运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365147/1587017617582-88b3ba8d-43a3-4b45-9f2b-9ff16b7da376.png",alt:"1.png"}})]),s._v(" "),a("h3",{attrs:{id:"docker优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker优点"}},[s._v("#")]),s._v(" Docker优点")]),s._v(" "),a("p",[s._v("简化程序：\nDocker 让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，便可以实现虚拟化。Docker改变了虚拟化的方式，使开发者可以直接将自己的成果放入Docker中进行管理。方便快捷已经是 Docker的最大优势，过去需要用数天乃至数周的任务，在Docker容器的处理下，只需要数秒就能完成。")]),s._v(" "),a("p",[s._v("避免选择恐惧症：\n如果你有选择恐惧症，还是资深患者。Docker 帮你打包你的纠结！比如 Docker 镜像；Docker 镜像中包含了运行环境和配置，所以 Docker 可以简化部署多种应用实例工作。比如 Web 应用、后台应用、数据库应用、大数据应用比如 Hadoop 集群、消息队列等等都可以打包成一个镜像部署。")]),s._v(" "),a("p",[s._v("节省开支：\n一方面，云计算时代到来，使开发者不必为了追求效果而配置高额的硬件，Docker 改变了高性能必然高价格的思维定势。Docker 与云的结合，让云空间得到更充分的利用。不仅解决了硬件管理的问题，也改变了虚拟化的方式。")]),s._v(" "),a("h2",{attrs:{id:"docker-架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-架构"}},[s._v("#")]),s._v(" Docker 架构")]),s._v(" "),a("p",[s._v("Docker使用C/S架构，Client通过接口与Server进程通信实现容器的构建，运行和发布，如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/365147/1587017629001-91afd66d-0b2b-4836-92f9-8614fcbc691b.png",alt:"2.png"}})]),s._v(" "),a("h3",{attrs:{id:"host-docker-宿主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host-docker-宿主机"}},[s._v("#")]),s._v(" Host(Docker 宿主机)")]),s._v(" "),a("p",[s._v("安装了Docker程序，并运行了Docker daemon的主机。")]),s._v(" "),a("h4",{attrs:{id:"docker-daemon-docker-守护进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-daemon-docker-守护进程"}},[s._v("#")]),s._v(" Docker daemon(Docker 守护进程)：")]),s._v(" "),a("p",[s._v("运行在宿主机上，Docker守护进程，用户通过Docker client(Docker命令)与Docker daemon交互。")]),s._v(" "),a("h4",{attrs:{id:"images-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#images-镜像"}},[s._v("#")]),s._v(" Images(镜像)：")]),s._v(" "),a("p",[s._v("将软件环境打包好的模板，用来创建容器的，一个镜像可以创建多个容器。")]),s._v(" "),a("p",[s._v("镜像分层结构：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/jpeg/365147/1587017642482-36494fbb-d25f-426c-b76c-2a9b27c415f9.jpeg",alt:"docker image.jpg"}})]),s._v(" "),a("p",[s._v("位于下层的镜像称为父镜像(Parent Image)，最底层的称为基础镜像(Base Image)。")]),s._v(" "),a("p",[s._v("最上层为“可读写”层，其下的均为“只读”层。")]),s._v(" "),a("p",[s._v("AUFS:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("advanced multi-layered unification filesystem：高级多层统一文件系统")])]),s._v(" "),a("li",[a("p",[s._v("用于为Linux文件系统实现“联合挂载”")])]),s._v(" "),a("li",[a("p",[s._v("AUFS是之前的UnionFS的重新实现")])]),s._v(" "),a("li",[a("p",[s._v("Docker最初使用AUFS作为容器文件系统层")])]),s._v(" "),a("li",[a("p",[s._v("AUFS的竞争产品是overlayFS，从3.18开始被合并入Linux内核")])]),s._v(" "),a("li",[a("p",[s._v("Docker的分层镜像，除了AUFS，Docker还支持btrfs，devicemapper和vfs等")])])]),s._v(" "),a("h4",{attrs:{id:"containers-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#containers-容器"}},[s._v("#")]),s._v(" Containers(容器)：")]),s._v(" "),a("p",[s._v("Docker的运行组件，启动一个镜像就是一个容器，容器与容器之间相互隔离，并且互不影响。")]),s._v(" "),a("h3",{attrs:{id:"docker-client-docker-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-client-docker-客户端"}},[s._v("#")]),s._v(" Docker Client(Docker 客户端)")]),s._v(" "),a("p",[s._v("Docker命令行工具，用户是用Docker Client与Docker daemon进行通信并返回结果给用户。也可以使用其他工具通过"),a("a",{attrs:{href:"https://docs.docker.com/develop/sdk/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Api "),a("OutboundLink")],1),s._v("与Docker daemon通信。")]),s._v(" "),a("h3",{attrs:{id:"registry-仓库服务注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#registry-仓库服务注册"}},[s._v("#")]),s._v(" Registry(仓库服务注册)")]),s._v(" "),a("p",[s._v("经常会和仓库(Repository)混为一谈，实际上Registry上可以有多个仓库，每个仓库可以看成是一个用户，一个用户的仓库放了多个镜像。仓库分为了公开仓库(Public Repository)和私有仓库(Private Repository)，最大的公开仓库是官方的"),a("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Hub"),a("OutboundLink")],1),s._v("，国内也有如阿里云、时速云等，可以给国内用户提供稳定快速的服务。用户也可以在本地网络内创建一个私有仓库。当用户创建了自己的镜像之后就可以使用 push 命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像时候，只需要从仓库上 pull 下来就可以了。")]),s._v(" "),a("h2",{attrs:{id:"docker-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装"}},[s._v("#")]),s._v(" Docker 安装")]),s._v(" "),a("p",[s._v("Docker 提供了两个版本：社区版 (CE) 和企业版 (EE)。")]),s._v(" "),a("h3",{attrs:{id:"操作系统要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统要求"}},[s._v("#")]),s._v(" 操作系统要求")]),s._v(" "),a("p",[s._v("以Centos7为例，且Docker 要求操作系统必须为64位，且centos内核版本为3.1及以上。")]),s._v(" "),a("p",[s._v("查看系统内核版本信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("uname -r\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"一、准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、准备"}},[s._v("#")]),s._v(" 一、准备")]),s._v(" "),a("p",[s._v("卸载旧版本：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum remove docker docker-common docker-selinux docker-engine\nyum remove docker-ce\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("卸载后将保留"),a("code",[s._v("/var/lib/docker")]),s._v("的内容（镜像、容器、存储卷和网络等）。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rm -rf /var/lib/docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("1.安装依赖软件包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum install -y yum-utils device-mapper-persistent-data lvm2\n#安装前可查看device-mapper-persistent-data和lvm2是否已经安装\nrpm -qa|grep device-mapper-persistent-data\nrpm -qa|grep lvm2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("2.设置yum源")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("此处设置的yum源一般不使用，下载docker很慢\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n修改此文件，将其中的下载路径更换为国内比较快的路径\nvim /etc/yum.repos.d/docker-ce.repo\n:%s@https://download.docker.com/@https://mirrors.tuna.tsinghua.edu.cn/docker-ce/@\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("3.更新yum软件包索引")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum makecache fast\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"二、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、安装"}},[s._v("#")]),s._v(" 二、安装")]),s._v(" "),a("p",[s._v("安装最新版本docker-ce")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum install docker-ce -y\n#安装指定版本docker-ce可使用以下命令查看\nyum list docker-ce.x86_64  --showduplicates | sort -r\n# 安装完成之后可以使用命令查看\ndocker version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"三、配置镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、配置镜像加速"}},[s._v("#")]),s._v(" 三、配置镜像加速")]),s._v(" "),a("p",[s._v("这里使用阿里云的免费镜像加速服务，也可以使用其他如时速云、网易云等")]),s._v(" "),a("p",[s._v("1.注册登录开通阿里云"),a("a",{attrs:{href:"https://cr.console.aliyun.com/cn-hangzhou/repositories",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器镜像服务"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("2.查看控制台，招到镜像加速器并复制自己的加速器地址")]),s._v(" "),a("p",[s._v("3.找到/etc/docker目录下的daemon.json文件，没有则直接"),a("code",[s._v("vi daemon.json")])]),s._v(" "),a("p",[s._v("4.加入以下配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#填写自己的加速器地址\n{\n  "registry-mirrors": ["https://zfzbet67.mirror.aliyuncs.com"]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("5.通知systemd重载此配置文件；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl daemon-reload\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6.重启docker服务")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl restart docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"docker常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker常用操作"}},[s._v("#")]),s._v(" Docker常用操作")]),s._v(" "),a("p",[s._v("输入"),a("code",[s._v("docker")]),s._v("可以查看Docker的命令用法，输入"),a("code",[s._v("docker COMMAND --help")]),s._v("查看指定命令详细用法。")]),s._v(" "),a("h3",{attrs:{id:"镜像常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像常用操作"}},[s._v("#")]),s._v(" 镜像常用操作")]),s._v(" "),a("p",[s._v("查找镜像：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker search 关键词\n#搜索docker hub网站镜像的详细信息\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("下载镜像：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker pull 镜像名:TAG\n# Tag表示版本，有些镜像的版本显示latest，为最新版本\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("打包镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker save -o redis.tar redis:latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("加载离线镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker load -i redis.tar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看镜像：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker images\n# 查看本地所有镜像\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("删除镜像：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker rmi -f 镜像ID或者镜像名:TAG\n# 删除指定本地镜像\n# -f 表示强制删除\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("获取元信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker inspect 镜像ID或者镜像名:TAG\n# 获取镜像的元信息，详细信息\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"容器常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器常用操作"}},[s._v("#")]),s._v(" 容器常用操作")]),s._v(" "),a("p",[s._v("​\t运行：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name 容器名 -i -t -p 主机端口:容器端口 -d -v 主机目录:容器目录:ro 镜像ID或镜像名:TAG\n# --name 指定容器名，可自定义，不指定自动命名\n# -i 以交互模式运行容器\n# -t 分配一个伪终端，即命令行，通常-it组合来使用\n# -p 指定映射端口，讲主机端口映射到容器内的端口\n# -d 后台运行容器\n# -v 指定挂载主机目录到容器目录，默认为rw读写模式，ro表示只读\n# -P 如果在不知道容器内应用的具体端口是什么，就可以用它来代替 -p ，会将容器要使用的端口映射到宿主机一个随机的端口上，可以配合docker port 容器名使用\n# --privileged=true 让docker容器获取宿主机的root权限\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("容器列表：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker ps -a -q\n# docker ps查看正在运行的容器\n# -a 查看所有容器（运行中、未运行）\n# -q 只查看容器的ID\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("启动容器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker start 容器ID或容器名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("停止容器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker stop 容器ID或容器名\ndocker stop  $(docker  container  ls   -a  -q)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("删除容器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker rm -f 容器ID或容器名\ndocker rm  $(docker  container  ls   -a  -q)\n# -f 表示强制删除\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("查看日志：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker logs 容器ID或容器名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("进入正在运行容器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -it 容器ID或者容器名 /bin/bash\n# 进入正在运行的容器并且开启交互模式终端\n# /bin/bash是固有写法，作用是因为docker后台必须运行一个进程，否则容器就会退出，在这里表示启动容器后启动bash。\n# 也可以用docker exec在运行中的容器执行命令\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("拷贝文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker cp 主机文件路径 容器ID或容器名:容器路径 #主机中文件拷贝到容器中\ndocker cp 容器ID或容器名:容器路径 主机文件路径 #容器中文件拷贝到主机中\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("获取容器元信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker inspect 容器ID或容器名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看日志")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('docker logs 容器ID或容器名\ndocker logs -f -t --since="2017-05-31" --tail=10 edu_web_1\n--since : 此参数指定了输出日志开始日期，即只输出指定日期之后的日志。\n-f : 查看实时日志\n-t : 查看日志产生的日期\n-tail=10 : 查看最后的10条日志。\nedu_web_1 : 容器名称\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("查看容器暴露的端口")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker port 容器ID或容器名\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("容器中赋予log写入权限")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("chmod 777 xxxxx.log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"docker-安装各种镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装各种镜像"}},[s._v("#")]),s._v(" Docker 安装各种镜像")]),s._v(" "),a("h3",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" Mysql")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("docker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--name mysql -v /usr/local/docker-mysql/conf/my.cnf:/etc/mysql/cnf.d -v /usr/local/docker-mysql/logs:/etc/mysql/logs -v /usr/local/docker-mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:5.6")]),s._v("\n\ndocker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--name mysql5.6-2 -v /usr/local/docker-mysql5.6/conf2/my.cnf:/etc/mysql/cnf.d -v /usr/local/docker-mysql5.6/logs2:/etc/mysql/logs -v /usr/local/docker-mysql5.6/data2:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:5.6")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- docker mysql主从架构搭建")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--/etc/mysql/my.cnf mysql服务端配置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--/etc/mysql/conf.d/mysql.cnf mysql客户端配置文件")]),s._v("\n\ndocker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--name mysql-master -v /usr/local/docker-mysql-master/conf/my.cnf:/etc/mysql/my.cnf -v /usr/local/docker-mysql-master/logs:/etc/mysql/logs -v /usr/local/docker-mysql-master/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:8.0.20")]),s._v("\n\ndocker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--name mysql-slave -v /usr/local/docker-mysql-slave/conf/my.cnf:/etc/mysql/my.cnf -v /usr/local/docker-mysql-slave/logs:/etc/mysql/logs -v /usr/local/docker-mysql-slave/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:8.0.20")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[s._v("#")]),s._v(" MongoDB")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name mongo -p 27017:27017 -v /usr/local/docker-mongodb/conf:/data/configdb -v /usr/local/docker-mongodb/db/:/data/db/ -v /usr/local/docker-mongodb/mongodb/:/var/log/mongodb/ -d mongo:4.2.8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" redis")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("redis:\ndocker run --name myredis -p 6379:6379 -v /usr/local/docker-redis/redis.conf:/etc/redis/redis.conf -v /usr/local/docker-redis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"oracle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle"}},[s._v("#")]),s._v(" oracle")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 拉取镜像\nregistry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g是一个已经安装好的oracle_11g的镜像\ndocker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n2. 运行容器\ndocker run -d -p 1521:1521 --name oracle11g -v /usr/local/docker-oracle/config/profile:/etc/profile -v /usr/local/docker-oracle/config/.bashrc:/home/oracle/.bashrc registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n\n3. 配置oracle\ndocker exec -it oracle11g bash\nsu root\n分别配置/etc/profile和/home/oracle/.bashrc文件末尾添加环境变量\nexport ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=$ORACLE_HOME/bin:$PATH\n\n4. 修改sys密码\nsqlplus /nolog\nconn / as sysdba\nalter user sys identified by admin123;\n\n5. 查看oracle数据库实例和状态，此镜像默认实例为:helowin\nlsnrctl status \n\n6. 外部plsql连接测试\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h3",{attrs:{id:"elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[s._v("#")]),s._v(" Elasticsearch")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('version: \'2.2\'\nservices:\n  es01:\n    image: elasticsearch:7.3.3\n    container_name: es01\n    environment:\n      - node.name=es01\n      - cluster.name=es-docker-cluster\n      - discovery.seed_hosts=es02,es03\n      - cluster.initial_master_nodes=es01,es02,es03\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n      - 9200:9200\n    networks:\n      - elastic\n\n  es02:\n    image: elasticsearch:7.3.3\n    container_name: es02\n    environment:\n      - node.name=es02\n      - cluster.name=es-docker-cluster\n      - discovery.seed_hosts=es01,es03\n      - cluster.initial_master_nodes=es01,es02,es03\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n      - 9201:9201\n    networks:\n      - elastic\n\n  es03:\n    image: elasticsearch:7.3.3\n    container_name: es03\n    environment:\n      - node.name=es03\n      - cluster.name=es-docker-cluster\n      - discovery.seed_hosts=es01,es02\n      - cluster.initial_master_nodes=es01,es02,es03\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n      - 9202:9202\n    networks:\n      - elastic\n\n  kib01:\n    image: kibana:7.3.2\n    container_name: kib01\n    ports:\n      - 5601:5601\n    environment:\n      ELASTICSEARCH_URL: http://es01:9200\n      ELASTICSEARCH_HOSTS: http://es01:9200\n    networks:\n      - elastic\n\nnetworks:\n  elastic:\n    driver: bridge\n\n5.遇到的问题\n\n   5.1. max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\nvm最大虚拟内存,max_map_count[65530]太低，至少增加到[262144]\n\nvim /etc/sysctl.conf\nvm.max_map_count=655360\nsysctl -p   使配置生效\n\n   5.2. the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured\n\nyml配置文件添加集群引导\n\n   5.3. expecting token of type [START_OBJECT] but found [VALUE_STRING]]; \nyml配置文件语法错误\n\n\n\n\n/usr/share/elasticsearch/plugins\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br")])]),a("h3",{attrs:{id:"kibana"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kibana"}},[s._v("#")]),s._v(" kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name kibana -d -p 5601:5601 -v /usr/local/docker-kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml --network=es kibana:7.3.2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[s._v("#")]),s._v(" rabbitmq")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.3-management\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" nginx")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name nginx -d -p 80:80 -p 443:443 -v /usr/local/docker-nginx/config/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/docker-nginx/html:/usr/share/nginx/html -v /usr/local/docker-nginx/logs/:/var/log/nginx -v /usr/local/docker-nginx/config/server.crt:/etc/nginx/server.crt -v /usr/local/docker-nginx/config/server.key:/etc/nginx/server.key --network=es  lxk/https-nginx:1.0\n\ndocker run --name nginx -d -p 80:80 -p 443:443 -v /usr/local/docker-nginx/config/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/docker-nginx/html:/usr/share/nginx/html -v /usr/local/docker-nginx/logs/:/var/log/nginx -v /usr/local/docker-nginx/config/server.crt:/etc/nginx/server.crt -v /usr/local/docker-nginx/config/server.key:/etc/nginx/server.key --network=es  nginx:1.18.0\n\ndocker run --name nginx -d -p 80:80 -p 443:443  nginx-https:1.0\n\ndocker run --name nginx -d -p 80:80 -p 443:443 -v /usr/local/docker-nginx/config/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/docker-nginx/html:/usr/share/nginx/html -v /usr/local/docker-nginx/logs/:/var/log/nginx -v /usr/local/docker-nginx/config/server.crt:/etc/nginx/server.crt -v /usr/local/docker-nginx/config/server.key:/etc/nginx/server.key --network=es nginx-https:1.0\n\n/usr/sbin/nginx 可执行程序\n./nginx -V 查看已安装的模块\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"sqlserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sqlserver"}},[s._v("#")]),s._v(" sqlServer")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=SqlServer2019" --name "sql1" -p 1433:1433  -v sql1data:/var/opt/mssql -d mcr.microsoft.com/mssql/server:2019-latest\n\nsqlServer的宿主机挂载似乎只能使用sql1data挂载\n实际挂载路径为：/var/lib/docker/volumes/sql1data\n\ndocker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=SqlServer2019" --name "sql1" -p 1433:1433 -v /usr/local/docker-sql-server/sql1data:/var/opt/mssql -d mcr.microsoft.com/mssql/server:2019-latest\n\t第一次使用宿主机挂载报错：\n\t\t/opt/mssql/bin/sqlservr: Error: The system directory [/.system] could not be created.  Errno [13]\n\t解决方法：\n\t\tchmod 777 /usr/local/docker-sql-server/sql1data\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"docker-遇到的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-遇到的问题"}},[s._v("#")]),s._v(" Docker 遇到的问题")]),s._v(" "),a("h3",{attrs:{id:"tomcat问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomcat问题"}},[s._v("#")]),s._v(" Tomcat问题")]),s._v(" "),a("p",[s._v("安装tomcat镜像，启动容器后，访问tomcat 404 问题")]),s._v(" "),a("h5",{attrs:{id:"具体场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体场景"}},[s._v("#")]),s._v(" 具体场景：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("用命令: docker exec -it 运行的tomcat容器ID /bin/bash 进入到tomcat的目录\n\n进入webapps文件夹,发现里面是空的(tomcat默认的欢迎页面实际上放在的路径应该是:webapps/ROOT/index.jsp或者index.html)\n\n发现旁边还有个webapps.dist的文件,进入才发现原本应该在webapps文件中的文件都在webapps.dist文件中.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h5",{attrs:{id:"出现问题的版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现问题的版本"}},[s._v("#")]),s._v(" 出现问题的版本：")]),s._v(" "),a("p",[s._v("​\tdocker:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Version:           19.03.8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("​\ttomcat:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tomcat Tag 8.5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("将webapps.dist重命名成webapps即可,原来的webapps(空文件)可以删除或者命名成其他的名字既:mv webapps.dist webapps\n\n或者修改后提交成新的镜像\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"mysql问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql问题"}},[s._v("#")]),s._v(" Mysql问题")]),s._v(" "),a("h5",{attrs:{id:"具体场景-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体场景-2"}},[s._v("#")]),s._v(" 具体场景")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("安装mysql后，创建数据库，关闭容器时，数据没有了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"解决方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-2"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\ndocker run -p 3306:3306 --name mysql -v /usr/local/docker-mysql/conf/my.cnf:/etc/mysql/cnf.d -v /usr/local/docker-mysql/logs:/etc/mysql/logs -v /usr/local/docker-mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:5.6\n\n\n-p 端口映射\n-v 文件挂载，这里将conf.d配置文件,logs日志以及数据文件挂载到容器中，会覆盖容器指定配置，这样，容器关闭时，data数据就不会清空。\n\n\n\n\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("有时候从Docker镜像仓库中下载的镜像不能满足要求，我们可以基于一个基础镜像构建一个自己的镜像")]),s._v(" "),a("p",[s._v("两种方式：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("更新镜像：使用"),a("code",[s._v("docker commit")]),s._v("命令")])]),s._v(" "),a("li",[a("p",[s._v("构建镜像：使用"),a("code",[s._v("docker build")]),s._v("命令，需要创建Dockerfile文件")])])]),s._v(" "),a("h1",{attrs:{id:"docker-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-2"}},[s._v("#")]),s._v(" Docker(2)")]),s._v(" "),a("h2",{attrs:{id:"更新镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新镜像"}},[s._v("#")]),s._v(" 更新镜像")]),s._v(" "),a("p",[s._v("先使用基础镜像创建一个容器，然后对容器内容进行更改，然后使用"),a("code",[s._v("docker commit")]),s._v("命令提交为一个新的镜像（以tomcat为例）。")]),s._v(" "),a("p",[s._v("1.根据基础镜像，创建容器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name mytomcat -p 80:8080 -d tomcat\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.修改容器内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -it mytomcat /bin/bash\ncd webapps/ROOT\nrm -f index.jsp\necho hello world > index.html\nexit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("3.提交为新镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('docker commit -m="描述消息" -a="作者" 容器ID或容器名 镜像名:TAG\n# 例:\n# docker commit -m="修改了首页" -a="华安" mytomcat huaan/tomcat:v1.0\ndocker commit -m="nginx-https" -a="lxk" nginx nginx-https:1.0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("注意：commit虽然可以更新为最新的镜像，但是是有限制的，只能更新在容器中修改的东西，例如在容器中复制一个文件，但是通过-v命令挂载的东西，是不会更新的")])]),s._v(" "),a("p",[s._v("4.使用新镜像运行容器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name tom -p 8080:8080 -d huaan/tomcat:v1.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("注意：使用commit提交的方式生成的新镜像，镜像只会更新在容器内部修改的东西，例如cp进去一个文件，添加一个目录，但是使用-v命令挂载的文件里面的内容并不会被修改，例如容器内有个配置文件，port=80，启动容器时-v挂载，port=81，commit后port=80")])]),s._v(" "),a("h2",{attrs:{id:"使用dockerfile构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile构建镜像"}},[s._v("#")]),s._v(" 使用Dockerfile构建镜像")]),s._v(" "),a("h3",{attrs:{id:"什么是dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是dockerfile"}},[s._v("#")]),s._v(" 什么是Dockerfile？")]),s._v(" "),a("p",[s._v("Dockerfile is nothing but the source code for building Docker images")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Docker can build images automatically by reading the instructions from a Dockerfile")])]),s._v(" "),a("li",[a("p",[s._v("A Dockerfile is a "),a("strong",[s._v("text document")]),s._v(" that contains all the commands a user could call on the command line to assemble an image")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("Using "),a("strong",[s._v("docker build")]),s._v(" users can create an automated build that executes several command-line instructions in succession")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/jpeg/365147/1587017706307-8195b999-d90b-467a-a24f-15969ee89493.jpeg",alt:"dockerfile.jpg"}})]),s._v(" "),a("h3",{attrs:{id:"dockerfile格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile格式"}},[s._v("#")]),s._v(" Dockerfile格式")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Format：")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("#Comment")])])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("INSTRUCTION arguments")])])]),s._v(" "),a("li",[a("p",[s._v("The instruction is not case-sensitive")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("However,convention is for them to be UPPERCASE to distinguish them from arguments more easily")])])]),s._v(" "),a("li",[a("p",[s._v("Docker runs instructions in a Dockerfile in order")])]),s._v(" "),a("li",[a("p",[s._v("The first instruction must be 'FROM' in order to specify the Base Image from which you are building")])])]),s._v(" "),a("h3",{attrs:{id:"使用dockerfile构建springboot应用镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile构建springboot应用镜像"}},[s._v("#")]),s._v(" 使用Dockerfile构建SpringBoot应用镜像")]),s._v(" "),a("p",[s._v("一、准备")]),s._v(" "),a("p",[s._v("1.把你的springboot项目打包成可执行jar包")]),s._v(" "),a("p",[s._v("2.把jar包上传到Linux服务器")]),s._v(" "),a("p",[s._v("二、构建")]),s._v(" "),a("p",[s._v("1.在jar包路径下创建Dockerfile文件"),a("code",[s._v("vi Dockerfile")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 指定基础镜像，本地没有会从dockerHub pull下来\nFROM java:8\n#作者\nMAINTAINER huaan\n# 把可执行jar包复制到基础镜像的根目录下\n# 可以添加多个ADD或COPY\nADD luban.jar /luban.jar\n# 镜像要暴露的端口，如要使用端口，在执行docker run命令时使用-p生效\nEXPOSE 80\n# 在镜像运行为容器后执行的命令\nENTRYPOINT ["java","-jar","/luban.jar"]\n\n\n#指定基础镜像，本地没有会从dockerHub pull下来\nFROM java:8\n#作者\nMAINTAINER lxk\n# 把可执行jar包复制到基础镜像的根目录下\n# 可以添加多个ADD或COPY\nADD mycat /mycat\n# 镜像要暴露的端口，如要使用端口，在执行docker run命令时使用-p生效\nEXPOSE 5044\n# 在镜像运行为容器后执行的命令\nCMD /mycat/bin/mycat console\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("2.使用"),a("code",[s._v("docker build")]),s._v("命令构建镜像，基本语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t springbootdemo:0.1 .\n# -f指定Dockerfile文件的路径\n# -t指定镜像名字和TAG\n# .指当前目录，这里实际上需要一个上下文路径\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("三、运行")]),s._v(" "),a("p",[s._v("运行自己的SpringBoot镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --name pro -p 80:80 -d 镜像名:TAG\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"dockerfile常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile常用指令"}},[s._v("#")]),s._v(" Dockerfile常用指令")]),s._v(" "),a("h4",{attrs:{id:"from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" FROM")]),s._v(" "),a("p",[s._v("FROM指令是最重要的一个并且必须为Dockerfile文件开篇的第一个非注释行，用于为镜像文件构建过程指定基础镜像，后续的指令运行于此基础镜像提供的运行环境")]),s._v(" "),a("p",[s._v("这个基础镜像可以是任何可用镜像，默认情况下docker build会从本地仓库找指定的镜像文件，如果不存在就会从Docker Hub上拉取")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FROM <image>\nFROM <image>:<tag>\nFROM <image>@<digest>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"maintainer-depreacted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintainer-depreacted"}},[s._v("#")]),s._v(" MAINTAINER(depreacted)")]),s._v(" "),a("p",[s._v("Dockerfile的制作者提供的本人详细信息")]),s._v(" "),a("p",[s._v("Dockerfile不限制MAINTAINER出现的位置，但是推荐放到FROM指令之后")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("MAINTAINER <name>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("name可以是任何文本信息，一般用作者名称或者邮箱")]),s._v(" "),a("h4",{attrs:{id:"label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[s._v("#")]),s._v(" LABEL")]),s._v(" "),a("p",[s._v("给镜像指定各种元数据")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("LABEL <key>=<value> <key>=<value> <key>=<value>...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("一个Dockerfile可以写多个LABEL，但是不推荐这么做，Dockerfile每一条指令都会生成一层镜像，如果LABEL太长可以使用\\符号换行。构建的镜像会继承基础镜像的LABEL，并且会去掉重复的，但如果值不同，则后面的值会覆盖前面的值。")]),s._v(" "),a("h4",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" COPY")]),s._v(" "),a("p",[s._v("用于从宿主机复制文件到创建的新镜像文件")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('COPY <src>...<dest>\nCOPY ["<src>",..."<dest>"]\n# <src>：要复制的源文件或者目录，可以使用通配符\n# <dest>：目标路径，即正在创建的image的文件系统路径；建议<dest>使用绝对路径，否则COPY指令则以WORKDIR为其起始路径\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("注意：如果你的路径中有空白字符，通常会使用第二种格式")]),s._v(" "),a("p",[s._v("规则：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("``必须是build上下文中的路径，不能是其父目录中的文件")])]),s._v(" "),a("li",[a("p",[s._v("如果"),a("code",[s._v("是目录，则其内部文件或子目录会被递归复制，但")]),s._v("目录自身不会被复制")])]),s._v(" "),a("li",[a("p",[s._v("如果指定了多个"),a("code",[s._v("，或在")]),s._v("中使用了通配符，则``必须是一个目录，则必须以/符号结尾")])]),s._v(" "),a("li",[a("p",[s._v("如果``不存在，将会被自动创建，包括其父目录路径")])])]),s._v(" "),a("h4",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),a("p",[s._v("基本用法和COPY指令一样，ADD支持使用TAR文件和URL路径")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('ADD <src>...<dest>\nADD ["<src>",..."<dest>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("规则：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("和COPY规则相同")])]),s._v(" "),a("li",[a("p",[s._v("如果"),a("code",[s._v("为URL并且")]),s._v("没有以/结尾，则"),a("code",[s._v("指定的文件将被下载到")])])]),s._v(" "),a("li",[a("p",[s._v("如果``是一个本地系统上压缩格式的tar文件，它会展开成一个目录；但是通过URL获取的tar文件不会自动展开")])]),s._v(" "),a("li",[a("p",[s._v("如果"),a("code",[s._v("有多个，直接或间接使用了通配符指定多个资源，则")]),s._v("必须是目录并且以/结尾")])])]),s._v(" "),a("h4",{attrs:{id:"workdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[s._v("#")]),s._v(" WORKDIR")]),s._v(" "),a("p",[s._v("用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录，只会影响当前WORKDIR之后的指令。")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("WORKDIR <dirpath>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在Dockerfile文件中，WORKDIR可以出现多次，路径可以是相对路径，但是它是相对于前一个WORKDIR指令指定的路径")]),s._v(" "),a("p",[s._v("另外，WORKDIR可以是ENV指定定义的变量")]),s._v(" "),a("h4",{attrs:{id:"volume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[s._v("#")]),s._v(" VOLUME")]),s._v(" "),a("p",[s._v("用来创建挂载点，可以挂载宿主机上的卷或者其他容器上的卷")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('VOLUME <mountpoint>\nVOLUME ["<mountpoint>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("不能指定宿主机当中的目录，宿主机挂载的目录是自动生成的")]),s._v(" "),a("h4",{attrs:{id:"expose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[s._v("#")]),s._v(" EXPOSE")]),s._v(" "),a("p",[s._v("用于给容器打开指定要监听的端口以实现和外部通信")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("EXPOSE <port>[/<protocol>] [<port>[/<protocol>]...]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("``用于指定传输层协议，可以是TCP或者UDP，默认是TCP协议")]),s._v(" "),a("p",[s._v("EXPOSE可以一次性指定多个端口，例如："),a("code",[s._v("EXPOSE 80/tcp 80/udp")])]),s._v(" "),a("h4",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" ENV")]),s._v(" "),a("p",[s._v("用来给镜像定义所需要的环境变量，并且可以被Dockerfile文件中位于其后的其他指令(如ENV、ADD、COPY等)所调用，调用格式："),a("img",{attrs:{src:"https://g.yuque.com/gr/latex?variable_name%E6%88%96%E8%80%85",alt:"img"}}),s._v("{variable_name}")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ENV <key> <value>\nENV <key>=<value>...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("第一种格式中，"),a("code",[s._v("之后的所有内容都会被视为")]),s._v("的组成部分，所以一次只能设置一个变量")]),s._v(" "),a("p",[s._v("第二种格式可以一次设置多个变量，如果"),a("code",[s._v("当中有空格可以使用\\进行转义或者对")]),s._v("加引号进行标识；另外\\也可以用来续行")]),s._v(" "),a("h4",{attrs:{id:"arg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arg"}},[s._v("#")]),s._v(" ARG")]),s._v(" "),a("p",[s._v("用法同ENV")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ARG <name>[=<default value>]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("指定一个变量，可以在docker build创建镜像的时候，使用"),a("code",[s._v("--build-arg =")]),s._v("来指定参数")]),s._v(" "),a("h4",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" RUN")]),s._v(" "),a("p",[s._v("用来指定docker build过程中运行指定的命令")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('RUN <command>\nRUN ["<executable>","<param1>","<param2>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("第一种格式里面的参数一般是一个shell命令，以"),a("code",[s._v("/bin/sh -c")]),s._v("来运行它")]),s._v(" "),a("p",[s._v("第二种格式中的参数是一个JSON格式的数组，当中``是要运行的命令，后面是传递给命令的选项或者参数；但是这种格式不会用"),a("code",[s._v("/bin/sh -c")]),s._v("来发起，所以常见的shell操作像变量替换和通配符替换不会进行；如果你运行的命令依赖shell特性，可以替换成类型以下的格式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('RUN ["/bin/bash","-c","<executable>","<param1>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),a("p",[s._v("容器启动时运行的命令")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('CMD <command>\nCMD ["<executable>","<param1>","<param2>"]\nCMD ["<param1>","<param2>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("前两种语法和RUN相同")]),s._v(" "),a("p",[s._v("第三种语法用于为ENTRYPOINT指令提供默认参数")]),s._v(" "),a("p",[s._v("RUN和CMD区别：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("RUN指令运行于镜像文件构建过程中，CMD则运行于基于Dockerfile构建出的新镜像文件启动为一个容器的时候")])]),s._v(" "),a("li",[a("p",[s._v("CMD指令的主要目的在于给启动的容器指定默认要运行的程序，且在运行结束后，容器也将终止；不过，CMD命令可以被docker run的命令行选项给覆盖")])]),s._v(" "),a("li",[a("p",[s._v("Dockerfile中可以存在多个CMD指令，但是只有最后一个会生效")])])]),s._v(" "),a("h4",{attrs:{id:"entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[s._v("#")]),s._v(" ENTRYPOINT")]),s._v(" "),a("p",[s._v("类似于CMD指令功能，用于给容器指定默认运行程序")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('ENTRYPOINT<command>\nENTRYPOINT["<executable>","<param1>","<param2>"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("和CMD不同的是ENTRYPOINT启动的程序不会被docker run命令指定的参数所覆盖，而且，这些命令行参数会被当做参数传递给ENTRYPOINT指定的程序(但是，docker run命令的--entrypoint参数可以覆盖ENTRYPOINT)")]),s._v(" "),a("p",[s._v("docker run命令传入的参数会覆盖CMD指令的内容并且附加到ENTRYPOINT命令最后作为其参数使用")]),s._v(" "),a("p",[s._v("同样，Dockerfile中可以存在多个ENTRYPOINT指令，但是只有最后一个会生效")]),s._v(" "),a("p",[s._v("Dockerfile中如果既有CMD又有ENTRYPOINT，并且CMD是一个完整可执行命令，那么谁在最后谁生效")]),s._v(" "),a("h4",{attrs:{id:"onbuild"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onbuild"}},[s._v("#")]),s._v(" ONBUILD")]),s._v(" "),a("p",[s._v("用来在Dockerfile中定义一个触发器")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ONBUILD <instruction>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Dockerfile用来构建镜像文件，镜像文件也可以当成是基础镜像被另外一个Dockerfile用作FROM指令的参数")]),s._v(" "),a("p",[s._v("在后面这个Dockerfile中的FROM指令在构建过程中被执行的时候，会触发基础镜像里面的ONBUILD指令")]),s._v(" "),a("p",[s._v("ONBUILD不能自我嵌套，ONBUILD不会触发FROM和MAINTAINER指令")]),s._v(" "),a("p",[s._v("在ONBUILD指令中使用ADD和COPY要小心，因为新构建过程中的上下文在缺少指定的源文件的时候会失败")]),s._v(" "),a("p",[s._v("有时候需要共享镜像或者习惯使用自己定义的镜像，可以注册私有仓库，国内推荐使用阿里云")]),s._v(" "),a("p",[s._v("步骤：")]),s._v(" "),a("p",[s._v("1.登录阿里云容器镜像服务：https://cr.console.aliyun.com/cn-hangzhou/repositories")]),s._v(" "),a("p",[s._v("2.将镜像推送到阿里云")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 登录阿里云的docker仓库\n$ sudo docker login --username=[用户名] registry.cn-hangzhou.aliyuncs.com\n# 创建指定镜像的tag，归入某个仓库\n$ sudo docker tag [镜像ID] registry.cn-hangzhou.aliyuncs.com/huaan/huaan:[镜像版本号]\n# 讲镜像推送到仓库\n$ sudo docker push registry.cn-hangzhou.aliyuncs.com/huaan/huaan:[镜像版本号]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("3.拉取镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker pull registry.cn-hangzhou.aliyuncs.com/coldest7/mytom:v1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"docker-网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-网络"}},[s._v("#")]),s._v(" Docker 网络")]),s._v(" "),a("p",[s._v("Docker允许通过外部访问容器或容器互联的方式来提供网络服务。")]),s._v(" "),a("p",[s._v("安装Docker时，会自动安装一块Docker网卡称为docker0，用于Docker各容器及宿主机的网络通信，网段为172.0.0.1。")]),s._v(" "),a("p",[s._v("Docker网络中有三个核心概念：沙盒（Sandbox）、网络（Network）、端点（Endpoint）。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("沙盒，提供了容器的虚拟网络栈，也即端口套接字、IP路由表、防火墙等内容。隔离容器网络与宿主机网络，形成了完全独立的容器网络环境。")])]),s._v(" "),a("li",[a("p",[s._v("网络，可以理解为Docker内部的虚拟子网，网络内的参与者相互可见并能够进行通讯。Docker的虚拟网络和宿主机网络是存在隔离关系的，其目的主要是形成容器间的安全通讯环境。")])]),s._v(" "),a("li",[a("p",[s._v("端点，位于容器或网络隔离墙之上的洞，主要目的是形成一个可以控制的突破封闭的网络环境的出入口。当容器的端点与网络的端点形成配对后，就如同在这两者之间搭建了桥梁，便能够进行数据传输了。")])])]),s._v(" "),a("h2",{attrs:{id:"docker的四种网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker的四种网络模式"}},[s._v("#")]),s._v(" Docker的四种网络模式")]),s._v(" "),a("p",[s._v("Docker服务在启动的时候会创建三种网络，bridge、host和none，还有一种共享容器的模式container")]),s._v(" "),a("h3",{attrs:{id:"bridge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bridge"}},[s._v("#")]),s._v(" Bridge")]),s._v(" "),a("p",[s._v("桥接模式，主要用来对外通信的，docker容器默认的网络使用的就是bridge。")]),s._v(" "),a("p",[s._v("使用bridge模式配置容器自定的网络配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 配置容器的主机名\ndocker run --name t1 --network bridge -h [自定义主机名] -it --rm busybox\n# 自定义DNS\ndocker run --name t1 --network bridge --dns 114.114 -it --rm busybox\n# 给host文件添加一条\ndocker run --name t1 --network bridge --add-host [hostname]:[ip] -it --rm busybox\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("默认网络与自定义bridge网络的区别")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 默认的桥接网络容器之间通讯只能通过ip地址的方式通讯，而自定义的网络提供DNS解析，可以直接通过容器名访问其他容器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[s._v("#")]),s._v(" Host")]),s._v(" "),a("p",[s._v("host类型的网络就是主机网络的意思，绑定到这种网络上面的容器，内部使用的端口直接绑定在主机上对应的端口，而如果容器服务没有使用端口，则无影响。")]),s._v(" "),a("h3",{attrs:{id:"none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" None")]),s._v(" "),a("p",[s._v("从某种意义上来说，none应该算不上网络了，因为它不使用任何网络，会形成一个封闭网络的容器")]),s._v(" "),a("h3",{attrs:{id:"container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[s._v("#")]),s._v(" container")]),s._v(" "),a("p",[s._v("共享另外一个容器的network namespace，和host模式差不多，只是这里不是使用宿主机网络，而是使用的容器网络")]),s._v(" "),a("h2",{attrs:{id:"自定义docker0桥的网络属性信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义docker0桥的网络属性信息"}},[s._v("#")]),s._v(" 自定义docker0桥的网络属性信息")]),s._v(" "),a("p",[s._v("/etc/docker/daemon.json文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n"bip": "192.168.5.5/16",\n"fixed-cidr": "10.20.0.0/16",\n"fixed-cidr-v6": "2001:db8::/64",\n"mtu": 1500,\n"default-gateway": "10.20.1.1",\n"default-gateway-v6": "2001:db8:abcd::89",\n"dns": ["10.20.1.2","10.20.1.3"]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("核心选项为bip，即bridge ip之意，用于指定docker0桥自身的IP地址；其它选项可通过此地址计算得出")]),s._v(" "),a("p",[s._v("创建自定义的桥网络")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('docker network create -d bridge --subnet "172.26.0.0/16" --gateway "172.26.0.1" mybr0\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),a("p",[s._v("从上一节课我们了解到可以使用一个Dockerfile模板文件来快速构建一个自己的镜像并运行为应用容器。但是在平时工作的时候，我们会碰到多个容器要互相配合来使用的情况，比如数据库加上咱们Web应用等等。这种情况下，每次都要一个一个启动容器设置命令变得麻烦起来，所以Docker Compose诞生了。")]),s._v(" "),a("h2",{attrs:{id:"简介-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Compose的作用是“定义和运行多个Docker容器的应用”。使用Compose，你可以在一个配置文件（yaml格式）中配置你应用的服务，然后使用一个命令，即可创建并启动配置中引用的所有服务。")]),s._v(" "),a("p",[s._v("Compose中两个重要概念：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("服务 (service)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。")])]),s._v(" "),a("li",[a("p",[s._v("项目 (project)：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml文件中定义。")])])]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("p",[s._v("Compose支持三平台Windows、Mac、Linux，安装方式各有不同。我这里使用的是Linux系统，其他系统安装方法可以参考官方文档和开源GitHub链接：")]),s._v(" "),a("p",[s._v("Docker Compose官方文档链接：https://docs.docker.com/compose")]),s._v(" "),a("p",[s._v("Docker Compose GitHub链接：https://github.com/docker/compose")]),s._v(" "),a("p",[s._v("Linux上有两种安装方法，Compose项目是用Python写的，可以使用Python-pip安装，也可以通过GitHub下载二进制文件进行安装。")]),s._v(" "),a("h3",{attrs:{id:"通过python-pip安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过python-pip安装"}},[s._v("#")]),s._v(" 通过Python-pip安装")]),s._v(" "),a("p",[s._v("1.安装Python-pip")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum install -y epel-release\nyum install -y python-pip\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("2.安装docker-compose")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip install docker-compose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("3.验证是否安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("4.卸载")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip uninstall docker-compose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"通过github链接下载安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过github链接下载安装"}},[s._v("#")]),s._v(" 通过GitHub链接下载安装")]),s._v(" "),a("p",[s._v("非ROOT用户记得加sudo")]),s._v(" "),a("p",[s._v("1.通过GitHub获取下载链接，以往版本地址：https://github.com/docker/compose/releases")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.给二进制下载文件可执行的权限")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("chmod +x /usr/local/bin/docker-compose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("3.可能没有启动程序，设置软连接，比如:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("4.验证是否安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("5.卸载")]),s._v(" "),a("p",[s._v("如果是二进制包方式安装的，删除二进制文件即可。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rm /usr/local/bin/docker-compose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"简单实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单实例"}},[s._v("#")]),s._v(" 简单实例")]),s._v(" "),a("p",[s._v("Compose的使用非常简单，只需要编写一个docker-compose.yml，然后使用docker-compose 命令操作即可。docker-compose.yml描述了容器的配置，而docker-compose 命令描述了对容器的操作。")]),s._v(" "),a("p",[s._v("1.我们使用一个微服务项目先来做一个简单的例子，首先创建一个compose的工作目录，然后创建一个eureka文件夹，里面放可执行jar包和编写一个Dockerfile文件，目录结构如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("compose\n    eureka\n        Dockerfile\n        eureka-server-2.0.2.RELEASE.jar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("2.在compose目录创建模板文件docker-compose.yml文件并写入以下内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("version: '1'\nservices:\n  eureka:\n    build: ./eureka\n    ports:\n     - 3000:3000\n    expose:\n     - 3000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"docker-compose模板文件常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose模板文件常用指令"}},[s._v("#")]),s._v(" Docker Compose模板文件常用指令")]),s._v(" "),a("h3",{attrs:{id:"image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[s._v("#")]),s._v(" image")]),s._v(" "),a("p",[s._v("指定镜像名称或者镜像id，如果该镜像在本地不存在，Compose会尝试pull下来。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("image: java:8")]),s._v(" "),a("h3",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[s._v("#")]),s._v(" build")]),s._v(" "),a("p",[s._v("指定Dockerfile文件的路径。可以是一个路径，例如：")]),s._v(" "),a("p",[s._v("build: ./dir")]),s._v(" "),a("p",[s._v("也可以是一个对象，用以指定Dockerfile和参数，例如：")]),s._v(" "),a("p",[s._v("build:  context: ./dir  dockerfile: Dockerfile-alternate  args:   buildno: 1")]),s._v(" "),a("h3",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[s._v("#")]),s._v(" command")]),s._v(" "),a("p",[s._v("覆盖容器启动后默认执行的命令。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("command: bundle exec thin -p 3000")]),s._v(" "),a("p",[s._v("也可以是一个list，类似于Dockerfile总的CMD指令，格式如下：")]),s._v(" "),a("p",[s._v("command: [bundle, exec, thin, -p, 3000]")]),s._v(" "),a("h3",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[s._v("#")]),s._v(" links")]),s._v(" "),a("p",[s._v("容器间通信使用，链接到其他服务中的容器。可以指定服务名称和链接的别名使用SERVICE:ALIAS 的形式，或者只指定服务名称，示例：")]),s._v(" "),a("p",[s._v("web:  links:   - db   - db:database   - redis")]),s._v(" "),a("h3",{attrs:{id:"external-links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#external-links"}},[s._v("#")]),s._v(" external_links")]),s._v(" "),a("p",[s._v("表示链接到docker-compose.yml外部的容器，甚至并非Compose管理的容器，特别是对于那些提供共享容器或共同服务。格式跟links类似，示例：")]),s._v(" "),a("p",[s._v("external_links:  - redis_1  - project_db_1:mysql  - project_db_1:postgresql")]),s._v(" "),a("h3",{attrs:{id:"ports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ports"}},[s._v("#")]),s._v(" ports")]),s._v(" "),a("p",[s._v("暴露端口信息。使用宿主端口:容器端口的格式，或者仅仅指定容器的端口（此时宿主机将会随机指定端口），类似于docker run -p ，示例：")]),s._v(" "),a("p",[s._v("ports:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v('"3000"')])]),s._v(" "),a("li",[a("p",[s._v('"3000-3005"')])]),s._v(" "),a("li",[a("p",[s._v('"8000:8000"')])]),s._v(" "),a("li",[a("p",[s._v('"9090-9091:8080-8081"')])]),s._v(" "),a("li",[a("p",[s._v('"49100:22"')])]),s._v(" "),a("li",[a("p",[s._v('"127.0.0.1:8001:8001"')])]),s._v(" "),a("li",[a("p",[s._v('"127.0.0.1:5000-5010:5000-5010"')])])]),s._v(" "),a("h3",{attrs:{id:"expose-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose-2"}},[s._v("#")]),s._v(" expose")]),s._v(" "),a("p",[s._v("暴露端口，只将端口暴露给连接的服务，而不暴露给宿主机，示例：")]),s._v(" "),a("p",[s._v('expose:  - "3000"  - "8000"')]),s._v(" "),a("h3",{attrs:{id:"volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volumes"}},[s._v("#")]),s._v(" volumes")]),s._v(" "),a("p",[s._v("卷挂载路径设置。可以设置宿主机路径 （HOST:CONTAINER） 或加上访问模式 （HOST:CONTAINER:ro）。示例：")]),s._v(" "),a("p",[s._v("volumes:")]),s._v(" "),a("p",[s._v("Just specify a path and let the Engine create a volume")]),s._v(" "),a("ul",[a("li",[s._v("/var/lib/mysql")])]),s._v(" "),a("p",[s._v("Specify an absolute path mapping")]),s._v(" "),a("ul",[a("li",[s._v("/opt/data:/var/lib/mysql")])]),s._v(" "),a("p",[s._v("Path on the host, relative to the Compose file")]),s._v(" "),a("ul",[a("li",[s._v("./cache:/tmp/cache")])]),s._v(" "),a("p",[s._v("User-relative path")]),s._v(" "),a("ul",[a("li",[s._v("~/configs:/etc/configs/:ro")])]),s._v(" "),a("p",[s._v("Named volume")]),s._v(" "),a("ul",[a("li",[s._v("datavolume:/var/lib/mysql")])]),s._v(" "),a("h3",{attrs:{id:"volumes-from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volumes-from"}},[s._v("#")]),s._v(" volumes_from")]),s._v(" "),a("p",[s._v("从另一个服务或者容器挂载卷。可以指定只读或者可读写，如果访问模式没有指定，则默认是可读写。示例：")]),s._v(" "),a("p",[s._v("volumes_from:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("service_name")])]),s._v(" "),a("li",[a("p",[s._v("service_name:ro")])]),s._v(" "),a("li",[a("p",[s._v("container:container_name")])]),s._v(" "),a("li",[a("p",[s._v("container:container_name:rw")])])]),s._v(" "),a("h3",{attrs:{id:"environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[s._v("#")]),s._v(" environment")]),s._v(" "),a("p",[s._v("设置环境变量。可以使用数组或者字典两种方式。只有一个key的环境变量可以在运行Compose的机器上找到对应的值，这有助于加密的或者特殊主机的值。示例：")]),s._v(" "),a("p",[s._v("environment:  RACK_ENV: development  SHOW: 'true'  SESSION_SECRET:  environment:  - RACK_ENV=development  - SHOW=true  - SESSION_SECRET")]),s._v(" "),a("h3",{attrs:{id:"env-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env-file"}},[s._v("#")]),s._v(" env_file")]),s._v(" "),a("p",[s._v("从文件中获取环境变量，可以为单独的文件路径或列表。如果通过 docker-compose -f FILE 指定了模板文件，则 env_file 中路径会基于模板文件路径。如果有变量名称与 environment 指令冲突，则以envirment 为准。示例：")]),s._v(" "),a("p",[s._v("env_file: .env  env_file:  - ./common.env  - ./apps/web.env  - /opt/secrets.env")]),s._v(" "),a("h3",{attrs:{id:"extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[s._v("#")]),s._v(" extends")]),s._v(" "),a("p",[s._v("继承另一个服务，基于已有的服务进行扩展。")]),s._v(" "),a("h3",{attrs:{id:"net"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net"}},[s._v("#")]),s._v(" net")]),s._v(" "),a("p",[s._v("设置网络模式。示例：")]),s._v(" "),a("p",[s._v('net: "bridge" net: "host" net: "none" net: "container:[service name or container name/id]"')]),s._v(" "),a("h3",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[s._v("#")]),s._v(" dns")]),s._v(" "),a("p",[s._v("配置dns服务器。可以是一个值，也可以是一个列表。示例：")]),s._v(" "),a("p",[s._v("dns: 8.8.8.8 dns:  - 8.8.8.8  - 9.9.9.9")]),s._v(" "),a("h3",{attrs:{id:"dns-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-search"}},[s._v("#")]),s._v(" dns_search")]),s._v(" "),a("p",[s._v("配置DNS的搜索域，可以是一个值，也可以是一个列表，示例：")]),s._v(" "),a("p",[s._v("dns_search: example.com dns_search:  - dc1.example.com  - dc2.example.com")]),s._v(" "),a("h3",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[s._v("#")]),s._v(" 其它")]),s._v(" "),a("p",[s._v("docker-compose.yml 还有很多其他命令，可以参考docker-compose.yml文件官方文档：")]),s._v(" "),a("p",[s._v("https://docs.docker.com/compose/compose-file/")]),s._v(" "),a("h2",{attrs:{id:"使用docker-compose编排springcloud微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用docker-compose编排springcloud微服务"}},[s._v("#")]),s._v(" 使用Docker Compose编排SpringCloud微服务")]),s._v(" "),a("p",[s._v("使用docker-compose一次性来编排三个微服务:eureka服务(eureka-server-2.0.2.RELEASE.jar)、user服务(user-2.0.2.RELEASE.jar)、power服务(power-2.0.2.RELEASE.jar)")]),s._v(" "),a("p",[s._v("1.创建一个工作目录和docker-compose模板文件")]),s._v(" "),a("p",[s._v("2.工作目录下创建三个文件夹eureka、user、power，并分别构建好三个服务的镜像文件")]),s._v(" "),a("p",[s._v("以eureka的Dockerfile为例:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 基础镜像\nFROM java:8\n# 作者\nMAINTAINER huaan\n# 把可执行jar包复制到基础镜像的根目录下\nADD eureka-server-2.0.2.RELEASE.jar /eureka-server-2.0.2.RELEASE.jar\n# 镜像要暴露的端口，如要使用端口，在执行docker run命令时使用-p生效\nEXPOSE 8080\n# 在镜像运行为容器后执行的命令\nENTRYPOINT ["java","-jar","/eureka-server-2.0.2.RELEASE.jar"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("目录文件结构：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("compose\n    docker-compose.yml\n    eureka\n        Dockerfile\n        eureka-server-2.0.2.RELEASE.jar\n    user\n        Dockerfile\n        user-2.0.2.RELEASE.jar\n    power\n        Dockerfile\n        power-2.0.2.RELEASE.jar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("3.编写docker-compose模板文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("version: '3.3'\nservices:\n  eureka:\n    image: eureka:v1\n    ports:\n     - 8080:8080\n  user:\n    image: user:v1\n    ports:\n     - 8081:8081\n  power:\n    image: power:v1\n    ports:\n     - 8082:8082\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("4.启动微服务，可以加上参数-d后台启动")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose up -d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);